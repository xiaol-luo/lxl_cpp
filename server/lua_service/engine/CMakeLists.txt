CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(project_name engine)
PROJECT(project_name})

SET(Cpp_File_Pattern "*.hpp" "*.cpp" "*.h" "*.c")
FileGlobRecurse(${PROJECT_SOURCE_DIR} "${Cpp_File_Pattern}" dir_files)
SET(all_files ${all_files} ${dir_files})
FileGroupByDir(${PROJECT_SOURCE_DIR} "${all_files}" "")

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/framework)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/libs)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/lua53/lib)

LINK_LIBRARIES(lua53)
LINK_LIBRARIES(data_struct)
LINK_LIBRARIES(http_parser)
LINK_LIBRARIES(crossguid)
LINK_LIBRARIES(coro)
LINK_LIBRARIES(hiredis)
LINK_LIBRARIES(r3c)
LINK_LIBRARIES(hiredis_vip)
LINK_LIBRARIES(fixmath)
LINK_LIBRARIES(fixed_math)
LINK_LIBRARIES(box2d)

IF (WIN32)
	LINK_LIBRARIES(mongocxx-static)
	LINK_LIBRARIES(bsoncxx-static)
	LINK_LIBRARIES(bson-static-1.0)
	LINK_LIBRARIES(mongoc-static-1.0)
	LINK_LIBRARIES(Bcrypt)
	LINK_LIBRARIES(Secur32)
	LINK_LIBRARIES(Crypt32)
	LINK_LIBRARIES(Dnsapi)
	ADD_DEFINITIONS(-D_WINSOCK_DEPRECATED_NO_WARNINGS)
ELSE()
	LINK_LIBRARIES(m)
	LINK_LIBRARIES(pthread)
	LINK_LIBRARIES(mongocxx)
	LINK_LIBRARIES(bsoncxx)
ENDIF (WIN32)

MakeLib(${project_name} "${all_files}" false)

